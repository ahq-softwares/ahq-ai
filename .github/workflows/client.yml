name: Build AHQ AI Client

on:
  push:
    branches:
      - main
      - client-v*
    # paths:
    # - client/**

permissions: write-all

jobs:
  create:
    name: Create Release

    outputs:
      upload_url: ${{ steps.rel.outputs.upload_url }}
      release_id: ${{ steps.rel.outputs.id }}

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Get Tag Data
        shell: pwsh
        id: tag
        run: |
          ./genClientTag.ps1
        env:
          BRANCH_NAME: ${{ github.ref_name }}

      - name: Release
        uses: softprops/action-gh-release@v2
        id: rel
        with:
          name: AHQ AI Chat ${{ steps.tag.outputs.out }}
          body_path: ./RELEASE_SERVER.md
          append_body: true
          generate_release_notes: true
          tag_name: ${{ steps.tag.outputs.tag }}
          prerelease: ${{ github.ref_name == 'main' }}
          make_latest: true
          draft: true

  build-desktop:
    name: Build Client (Desktop)

    needs: [create]
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: true

      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc

          - os: windows-latest
            target: aarch64-pc-windows-msvc

          - os: macos-latest
            target: x86_64-apple-darwin

          - os: macos-latest
            target: aarch64-apple-darwin

          - os: ubuntu-22.04
            target: x86_64-unknown-linux-gnu

          - os: ubuntu-22.04-arm
            target: aarch64-unknown-linux-gnu

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup NodeJS
        uses: actions/setup-node@v5
        with:
          node-version: ">=24"

      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: nightly
          target: ${{ matrix.target }}
          components: rustfmt

      - name: Linux Prereq
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install libwebkit2gtk-4.1-dev \
            build-essential \
            curl \
            wget \
            file \
            libxdo-dev \
            libssl-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev

      - name: Build frontend
        run: |
          npm i -g pnpm

          pnpm install

          cd src-plugin
            pnpm install
            pnpm add -D rollup

            pnpm build
          cd ..
        working-directory: client

      - name: Build Chat App
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          releaseId: ${{ needs.create.outputs.release_id }}
          args: --target ${{ matrix.target }}

  publish:
    name: Publish release

    needs: [create, build-desktop]
    if: success()

    runs-on: ubuntu-latest

    steps:
      - name: Undraft Release
        uses: actions/github-script@v8
        with:
          script: |
            await github.rest.repos.updateRelease({
              owner: "${{ github.repository_owner }}",
              repo: "${{ github.repository }}".split("/")[1],
              release_id: ${{ needs.create.outputs.release_id }},
              draft: false
            });

  delete:
    name: Delete release in failure

    needs: [create, build-desktop]
    if: failure()

    runs-on: ubuntu-latest

    steps:
      - name: Delete Release
        uses: actions/github-script@v8
        with:
          script: |
            await github.rest.repos.deleteRelease({
              owner: "${{ github.repository_owner }}",
              repo: "${{ github.repository }}".split("/")[1],
              release_id: ${{ needs.create.outputs.release_id }}
            });
