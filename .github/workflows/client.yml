name: Build AHQ AI Client

on:
  push:
    branches:
      - main
      - client-v*
    paths:
      - client/**
      - .github/workflows/client.yml

permissions: write-all

jobs:
  create:
    name: Create Release

    outputs:
      upload_url: ${{ steps.rel.outputs.upload_url }}
      release_id: ${{ steps.rel.outputs.id }}

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Get Tag Data
        shell: pwsh
        id: tag
        run: |
          ./genClientTag.ps1
        env:
          BRANCH_NAME: ${{ github.ref_name }}

      - name: Release
        uses: softprops/action-gh-release@v2
        id: rel
        with:
          name: AHQ AI Chat ${{ steps.tag.outputs.out }}
          body_path: ./RELEASE_SERVER.md
          append_body: true
          generate_release_notes: true
          tag_name: ${{ steps.tag.outputs.tag }}
          prerelease: ${{ github.ref_name == 'main' }}
          make_latest: true
          draft: true

  build-desktop:
    name: Build Client (Desktop)

    needs: [create]
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: true

      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc

          - os: windows-latest
            target: aarch64-pc-windows-msvc

          - os: macos-latest
            target: x86_64-apple-darwin

          - os: macos-latest
            target: aarch64-apple-darwin

          - os: ubuntu-22.04
            target: x86_64-unknown-linux-gnu

          - os: ubuntu-22.04-arm
            target: aarch64-unknown-linux-gnu

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup NodeJS
        uses: actions/setup-node@v5
        with:
          node-version: ">=24"

      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: nightly
          target: ${{ matrix.target }}
          components: rustfmt

      - name: Linux Prereq
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install libwebkit2gtk-4.1-dev \
            build-essential \
            curl \
            wget \
            file \
            libxdo-dev \
            libssl-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev

      - name: Build frontend
        run: |
          npm i -g pnpm

          pnpm install

          cd src-plugin
            pnpm install
            pnpm add -D rollup

            pnpm build
          cd ..
        working-directory: client

      - name: Import Windows Certificate
        if: runner.os == 'Windows'
        env:
          WINDOWS_CERTIFICATE: ${{ secrets.WINDOWS_CERTIFICATE }}
          WINDOWS_CERTIFICATE_PASSWORD: ${{ secrets.WINDOWS_CERTIFICATE_PASSWORD }}
        run: |
          New-Item -ItemType directory -Path certificate
          Set-Content -Path certificate/tempCert.txt -Value $env:WINDOWS_CERTIFICATE
          certutil -decode certificate/tempCert.txt certificate/certificate.pfx
          Remove-Item -path certificate -include tempCert.txt
          Import-PfxCertificate -FilePath certificate/certificate.pfx -CertStoreLocation Cert:\CurrentUser\My -Password (ConvertTo-SecureString -String $env:WINDOWS_CERTIFICATE_PASSWORD -Force -AsPlainText)

      - name: Build Chat App
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
        with:
          releaseId: ${{ needs.create.outputs.release_id }}
          args: --target ${{ matrix.target }}
          projectPath: client
          includeDebug: true
          includeRelease: true

  build-android:
    needs: [create]

    name: Build Client (Android)

    runs-on: ubuntu-24.04

    strategy:
      fail-fast: true
      matrix:
        include:
          - args: --split-per-abi
            target: ""

          - args: --target aarch64 armv7
            target: arm-mobile

          - args: --target aarch64 armv7 i686 x86_64
            target: ""

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup NodeJS
        uses: actions/setup-node@v5
        with:
          node-version: ">=24"

      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: nightly
          target: aarch64-linux-android armv7-linux-androideabi i686-linux-android x86_64-linux-android

      - name: Build frontend
        run: |
          npm i -g pnpm

          pnpm install

          cd src-plugin
            pnpm install
            pnpm add -D rollup

            pnpm build
          cd ..
        working-directory: client

      - name: Setup Android Signing
        run: |
          cd src-tauri/gen/android
          echo "keyAlias=upload" > keystore.properties
          echo "password=${{ secrets.ANDROID_KEY_PASSWORD }}" >> keystore.properties
          base64 -d <<< "${{ secrets.ANDROID_KEY_BASE64 }}" > $RUNNER_TEMP/keystore.jks
          echo "storeFile=$RUNNER_TEMP/keystore.jks" >> keystore.properties
        working-directory: client

      - name: Build Chat App
        shell: pwsh
        run: |
          $env:JAVA_HOME="$env:JAVA_HOME_17_X64"
          $env:NDK_HOME="$env:ANDROID_NDK_LATEST_HOME"

          pnpm tauri android build ${{ matrix.args }}
          pnpm tauri android build --debug ${{ matrix.args }}
        working-directory: client
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Rename File (APK Release)
        shell: pwsh
        if: matrix.target != ''
        run: |
          Get-ChildItem -Path . -Filter "app-universal-release*" | 
          Rename-Item -NewName { 
            $_.Name -replace '^app-universal-release', "app-${{ matrix.target }}-release" 
          }
        working-directory: client/src-tauri/gen/android/app/build/outputs/apk/universal/release

      - name: Rename File (APK Debug)
        shell: pwsh
        if: matrix.target != ''
        run: |
          Get-ChildItem -Path . -Filter "app-universal-debug*" | 
          Rename-Item -NewName { 
            $_.Name -replace '^app-universal-debug', "app-${{ matrix.target }}-debug" 
          }
        working-directory: client/src-tauri/gen/android/app/build/outputs/apk/universal/debug

      - name: Rename File (AAB Release)
        shell: pwsh
        if: matrix.target != ''
        run: |
          Get-ChildItem -Path . -Filter "app-universal-release*" | 
          Rename-Item -NewName { 
            $_.Name -replace '^app-universal-release', "app-${{ matrix.target }}-release" 
          }
        working-directory: client/src-tauri/gen/android/app/build/outputs/bundle/universalRelease/

      - name: Rename File (AAB Debug)
        shell: pwsh
        if: matrix.target != ''
        run: |
          Get-ChildItem -Path . -Filter "app-universal-debug*" | 
          Rename-Item -NewName { 
            $_.Name -replace '^app-universal-debug', "app-${{ matrix.target }}-debug" 
          }
        working-directory: client/src-tauri/gen/android/app/build/outputs/bundle/universalDebug/

      - name: Upload Binaries
        uses: AButler/upload-release-assets@v3.0
        with:
          files: client/src-tauri/gen/android/app/build/outputs/**/app*.aab;client/src-tauri/gen/android/app/build/outputs/**/app*.apk
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          release-id: ${{ needs.create.outputs.release_id }}

  build-ios:
    needs: [create]

    name: Build Client (iOS)

    continue-on-error: true

    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup NodeJS
        uses: actions/setup-node@v5
        with:
          node-version: ">=24"

      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: nightly
          target: aarch64-linux-android armv7-linux-androideabi i686-linux-android x86_64-linux-android

      - name: Build frontend
        run: |
          npm i -g pnpm

          pnpm install

          cd src-plugin
            pnpm install
            pnpm add -D rollup

            pnpm build
          cd ..
        working-directory: client

      - name: Build Chat App
        shell: pwsh
        run: |
          pnpm tauri ios build --help
          pnpm tauri ios build --export-method debugging
          pnpm tauri ios build --export-method debugging --debug
        working-directory: client
        env:
          APPLE_DEVELOPMENT_TEAM: ${{ secrets.APPLE_DEVELOPMENT_TEAM }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Upload Binaries
      #   uses: AButler/upload-release-assets@v3.0
      #   with:
      #     files: client/src-tauri/gen/android/app/build/outputs/**/app*.aab;client/src-tauri/gen/android/app/build/outputs/**/app*.apk
      #     repo-token: ${{ secrets.GITHUB_TOKEN }}
      #     release-id: ${{ needs.create.outputs.release_id }}

  publish:
    name: Publish release

    needs: [create, build-desktop, build-android, build-ios]
    if: success()

    runs-on: ubuntu-latest

    steps:
      - name: Undraft Release
        uses: actions/github-script@v8
        with:
          script: |
            await github.rest.repos.updateRelease({
              owner: "${{ github.repository_owner }}",
              repo: "${{ github.repository }}".split("/")[1],
              release_id: ${{ needs.create.outputs.release_id }},
              draft: false
            });

  delete:
    name: Delete release in failure

    needs: [create, build-desktop, build-android, build-ios]
    if: failure()

    runs-on: ubuntu-latest

    steps:
      - name: Delete Release
        uses: actions/github-script@v8
        with:
          script: |
            await github.rest.repos.deleteRelease({
              owner: "${{ github.repository_owner }}",
              repo: "${{ github.repository }}".split("/")[1],
              release_id: ${{ needs.create.outputs.release_id }}
            });
